<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
  ~ one or more contributor license agreements. See the NOTICE file distributed
  ~ with this work for additional information regarding copyright ownership.
  ~ Licensed under the Camunda License 1.0. You may not use this file
  ~ except in compliance with the Camunda License 1.0.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.camunda.migrator.mapper.IdKeyMapper">

  <select id="findSkippedProcessInstanceIdsCount" resultType="long">
    SELECT COUNT(ID) FROM (
      <include refid="findSkippedProcessInstanceIdsByQueryCriteriaSql"/>
    )
  </select>

  <select id="findSkippedProcessInstanceIds">
    <include refid="findSkippedProcessInstanceIdsByQueryCriteriaSql"/>
  </select>

  <sql id="findSkippedProcessInstanceIdsByQueryCriteriaSql">
    SELECT ID FROM ${prefix}MIGRATION_MAPPING WHERE TYPE = 'RUNTIME_PROCESS_INSTANCE' AND ITEM_KEY IS NULL
    <include refid="io.camunda.migrator.Commons.pageSql"/>
  </sql>

  <select id="findAllProcessInstanceIds">
    SELECT ID
    FROM ${prefix}MIGRATION_MAPPING
    WHERE TYPE = 'RUNTIME_PROCESS_INSTANCE'
    ORDER BY ID
  </select>

  <update id="updateKeyById" parameterType="io.camunda.migrator.history.IdKeyDbModel">
    UPDATE ${prefix}MIGRATION_MAPPING
    SET ITEM_KEY = #{itemKey, jdbcType=BIGINT}
    WHERE ID = #{id, jdbcType=VARCHAR}
  </update>

  <select id="findLatestIdByType" parameterType="java.lang.String">
    SELECT ID FROM ${prefix}MIGRATION_MAPPING WHERE TYPE = '${type}' ORDER BY ID DESC
    <include refid="io.camunda.migrator.Commons.singleResultSql"/>
  </select>

  <select id="findKeyById" parameterType="java.lang.String">
    SELECT ITEM_KEY FROM ${prefix}MIGRATION_MAPPING WHERE ID = #{id}
  </select>

  <insert
    id="insert"
    parameterType="io.camunda.migrator.history.IdKeyDbModel"
    flushCache="true">
    INSERT INTO ${prefix}MIGRATION_MAPPING (ID, ITEM_KEY, TYPE)
    VALUES (#{id, jdbcType=VARCHAR}, #{itemKey, jdbcType=BIGINT}, #{type, jdbcType=VARCHAR})
  </insert>

  <delete id="delete">
    DELETE FROM ${prefix}MIGRATION_MAPPING
    WHERE ID = #{id}
  </delete>

</mapper>
